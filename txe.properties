#
# $Id$

# This is the id of the TXE node which is used as part of the transaction reference 
# for transactions handled by this node. If running multiple nodes in parallel 
# this id MUST be different for each node!  
#
node_id=01

# JVM parameters
#
#env.jre.start_heap=128m
#env.jre.start_heap=1024m
#env.jre.max_heap=512m
env.jre.max_heap=20480m
#env.jre.opts=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=9010,suspend=n

## TXE services
#
# Which URL to use to export the transaction processing client interface
#
processing_service_url=http://0.0.0.0:8777/txe/transactionProcessing

# Which URL to use to export the transaction exporting client interface
#
exporting_service_url=http://0.0.0.0:8777/txe/transactionExporting

# Which URL to use to export the subscriber client interface 
#
subscriber_service_url=http://0.0.0.0:8777/txe/subscriber

# Which URL to use to export the reseller client interface 
#
reseller_service_url=http://0.0.0.0:8777/txe/reseller

# Which URL to use to export the systemadmin client interface 
#
systemadmin_service_url=http://0.0.0.0:8777/txe/systemadmin

# Which URL to use to export the eventcallback interface 
#
eventcallback_service_url=http://0.0.0.0:8777/txe/callback


## Platform Web Services
#
# Location of the reseller transaction interface
# 
resellertransactionconnection.url=http://WEB01B:8911/reseller

# Location of the reseller management interface
# 
resellermanagementconnection.url=http://WEB01B:8911/resellerManagement

# Location of the voucher database link interface
#
voucherdbconnection.url=http://localhost:8912/voucherDb

# Location of the subscriber database transaction interface
# 
subscribertransactionconnection.url=http://localhost:8087/subscribers/transaction

# Location of core single sign-on interface
#
singlesignonconnection.url=http://WEB01B:8911/singleSignon

# Location of the report transaction interfaces
# All transactions starting with SUP are handled by the support service
reporttransactionconnection.1.url=http://localhost:8071/supportsystem/reports
reporttransactionconnection.1.report_id_regexp=SUP.*
reporttransactionconnection.2.url=http://WEB01B:8920/reportengine/internal
reporttransactionconnection.2.report_id_regexp=.*

#reporttransactionconnection.layout_language=en
reporttransactionconnection.layout_language=fr

# reseller_last_transactions is used by: getLastTransactionStatus, getMolletLastTransactionStatus
reporttransactionconnection.report_mapping.reseller_last_transactions=SUP_LAST_TRANSACTIONS
# subscriber_last_transactions is used by: getLastTransactionStatus, getMolletLastTransactionStatus
reporttransactionconnection.report_mapping.subscriber_last_transactions=SUP_SUB_LAST_TRANSACTIONS
# reseller_transaction_status is used by: getTransactionStatus, getMolletTransactionStatus
reporttransactionconnection.report_mapping.reseller_transaction_status=SUP_TRANSACTION_STATUS

# Which AccountTransactionEngine to use. Possible choices: LEGACY and GROUP.
# LEGACY - Makes one method call per transaction, debits first
# GROUP - Groups all transactions of the same account type and sends them in a single method call.
account_transaction_engine=LEGACY

# Location of all principal systems and which principal id types they handle
#
principal_systems.SUBSCRIBERS.id_types=SUBSCRIBERID SUBSCRIBERKEY SUBSCRIBERMSISDN SUBSCRIBERANONYMOUSID
principal_systems.SUBSCRIBERS.url=http://localhost:8087/principal
principal_systems.RESELLERS.id_types=RESELLERID RESELLERUSER RESELLERMSISDN RESELLERIDANDMSISDN ADMINUSER TERMINALID
principal_systems.RESELLERS.url=http://localhost:8912/principalService

# Custom operation service providers
# If the url is specified as "VOID" the custom operation will be
# treated as No operation and will return success if the principals
# are resolved correctly.
service_providers.1.provider_id=SUBSCRIBERSYSTEM
service_providers.1.operation_id=SUBSCRIBER_.*
service_providers.1.url=http://localhost:8087/customOperations
service_providers.2.provider_id=RESELLERSYSTEM
service_providers.2.operation_id=RESELLER_.*
service_providers.2.url=http://WEB01B:8911/customOperations
service_providers.3.provider_id=VOIDPROVIDER
service_providers.3.operation_id=VOID_OPERATION
service_providers.3.url=VOID
service_providers.4.provider_id=VASMANAGER
service_providers.4.operation_id=FAF_.*
service_providers.4.url=http://localhost:8096/customOperations
service_providers.5.provider_id=COREPROXY
service_providers.5.operation_id=SEND_SMS_NOTIFICATION.*
service_providers.5.url=http://localhost:8912/customOperationsService

purchase_providers.1.provider_id=ERS_VOUCHERS
purchase_providers.1.product_id_type=PRODUCT_SKU|GLOBAL_SKU
purchase_providers.1.url=http://localhost:8912/voucherPurchase

purchase_providers.2.provider_id=TICKET_SIMULATOR
purchase_providers.2.product_id_type=TICKET
purchase_providers.2.url=http://localhost:8091/ticketPurchase

## Account services
#
# The configuration of the connection to account services
#
# Example:
# You map account types to services.
# First you need to specifY the account type
#accountservice.1.account_type_id=AIRTIME
# Then specify the service type, available types are:
#  WEBSERVICE - for the new WS interface in ersplatform-internal
#  LEGACY - For the old WS interface in ersifextlink
#  VOID -  for an always successful service that does nothing (for BOOKKEEPING)
#accountservice.1.service_type=WEBSERVICE
# Then follows type dependant settings, for WEBSERVICE and LEGACY you need
# to specify the server URL
#accountservice.1.server_url=http://localhost:8091/accountlinksimulator
# Last but not least, account_description can be specified
#accountservice.1.account_description=Airtime
#
# Should TXE update principal account status after getAccountInformation
# call in the principal system?
#accountservice.1.update_principal_account_status=false

accountservice.1.account_type_id=AIRTIME
accountservice.1.service_type=LEGACY
accountservice.1.server_url=http://localhost:8010/UCIPLink
accountservice.1.account_description=Airtime

accountservice.2.account_type_id=MOLLET
accountservice.2.service_type=LEGACY
accountservice.2.server_url=http://localhost:8092/accountsystem

accountservice.3.account_type_id=RESELLER
accountservice.3.service_type=LEGACY
accountservice.3.server_url=http://localhost:8092/accountsystem

accountservice.4.account_type_id=RESELLER_CURRENCY
accountservice.4.service_type=LEGACY
accountservice.4.server_url=http://localhost:8092/accountsystem

accountservice.5.account_type_id=BOOKKEEPING
accountservice.5.service_type=VOID

accountservice.6.account_type_id=MOLLET_VOUCHER
accountservice.6.service_type=LEGACY
accountservice.6.server_url=http://localhost:8092/accountsystem

# To define external account systems or custom operation Ids for specific VAS 
# services use vasservices properties. operation_id is required.
# One can define server_url + classname or link_operation_id or both.
# If link_operation_id is the same as operation_id, then it can be omitted.
#
vasservices.1.operation_id=CMB
vasservices.1.classname=TransactionVoidConnection

#vasservices.2.operation_id=BIC_INFO
#vasservices.2.server_url=http://localhost:8091/accountlinksimulator
#vasservices.2.classname=FixedAccountClientConnection
#vasservices.2.link_operation_id=BIC_INFO

# Resellers Operation
# Resellers can activate themselves by sending activation
# code over different clients. Setting activation_code true will enable activation code 
# checking. 
resellers.activation_code=false

# Sub-resellers approving re-linking can either directly select there pin if true
# otherwise they needs to supply their old pin.
resellers.link_subreseller_approval_cpin=true

# The supported reversal operations
#reversal.supported_tx_profiles=CREDIT_TRANSFER, TOPUP, MOLLET_VOUCHER_CREATE, MOLLET_TRANSFER
reversal.supported_tx_profiles=CREDIT_TRANSFER, TOPUP

# State machine customizations:
#
#   prepare_for_result_codes - applies TransactionChainState.Pending to all 
#   REQUESTs that fail with the specified result codes (comma separated list).
#   "Prepare" because it simulates the behavior of PREPARE requests, which
#   postpones the transactions until further approval.
#   Example: 
#     statemachine.prepare_for_result_codes=1029
#     will prepare transactions if the receiver was not found so they can be
#     approved later when the receiver registers.

# SMS provider connection, by default assumes kannel is running on the same host with standard configuration
smsprovider.classname=HttpSMSProvider
smsprovider.url=http://127.0.0.1:13113/cgi-bin/sendsms?username=ers&password=recharge
# SMS prefix to be added to the destination number.
smsprovider.to_prefix=+

# MSISDN settings
# Default country code padded to msisdn in case entered msisdn with only a networkcode
# (starting with single 0)
locale.default_country_code=229
#Default network code padded to msisdn in case entered msisdn less than digits of default_network_code_digits + subscriber_number_digits
locale.default_network_code=66
#Length of msisdn excluding network code and country code
locale.subscriber_number_digits=6

# Accepted country codes: These will be accepted even without an international prefix
locale.accepted_country_codes=229

# Length of msisdn excluding network code and country code
#locale.subscriber_number_digits=8

# The length of subscriber number can now also be set as min and max values to allow
# for varying length msisdn:s.
# This setting will override locale.subscriber_number_digits
#locale.min_subscriber_number_digits=7
#locale.max_subscriber_number_digits=7

# Optional properties for the length of the full MSISDN, default values are 10 and 15 
#locale.min_msisdn_length=10
#locale.max_msisdn_length=15

# Optional property to set range of allowed network_codes.
#locale.accepted_network_codes=97,66,67
#locale.accepted_network_codes=97,96,66,67,61
locale.accepted_network_codes=97,96,66,67,61,62

# Does a number that starts with a network code require a leading '0'?
# (0 will not be counted as part the the network code and will be removed from the MSISDN)
locale.network_code_requires_0_prefix=false

# Currency settings
#Decimal separator
locale.decimal_separator=,
#Thousand separator
locale.thousand_separator=.

# Custom currency settings. 
#
# The format for the custom currency setting is:
# locale.custom_currency.XTS=3
#
# In this case XTS is the three letter ISO 4217 code (XTS is a code reserved for testing)
# and 3 is the amount of decimals. You can either make up your own currency code or override
# an existing currency code.  
# 
locale.custom_currency.XOF=2
locale.currency_formatting.XOF=###### FCFA

# CMS settings, used to resolve the request result message texts
cms.classname=SimpleFileCMS
# Optional default language in case the language is missing in the request to the CMS system. 
# cms.default_language=en
#cms.languages=en fr
cms.languages=fr en
cms.en.filename=messages_english.properties
cms.en.encoding=UTF-8
cms.fr.filename=messages_french.properties
cms.fr.encoding=UTF-8

# Flow control settings
flowcontrol.default.asynchronous=false
flowcontrol.default.cooldown_time=100
flowcontrol.default.max_parallel_requests=80
flowcontrol.default.log_stats=true
flowcontrol.default.log_stat_interval=60

# Service manager settings
# The default graceful shutdown time for stopping the server in milliseconds.
# In case a shutdown takes longer time, a warning message will be printed in the log. 
servicemanager.shutdown_hooks=SIGHUP:timeout=60000


# Transaction log provider settings
transactionlog.class_name=com.seamless.ers.txe.transactionlog.xmlbeans.XMLBeansTransactionLoggingFactory

transactionlog.log.db_driver=org.mariadb.jdbc.Driver
transactionlog.log.db_url=jdbc:mysql://localhost:3306/transactionlog
transactionlog.log.db_user=refill
transactionlog.log.db_password=refill
transactionlog.log.data_format=json
transactionlog.log.pool_min_size=40
transactionlog.log.pool_max_size=100
transactionlog.log.pool_simultaneous_build_throttle=40
transactionlog.log.fallback_logdir=/var/seamless/log/txe/fallback

# Classic reference generator with 25 digits using:
# - Node id
# - Time stamp
# - Sequence number (that will wrap when restarted etc)
#
transactionlog.log.reference_generator.class_name=com.seamless.common.referencegeneration.TimestampReferenceGenerator

# Number of digits in the sequence number part
#
transactionlog.log.reference_generator.reference_counter_length=6

# The format of the timestamp part of the reference
#
transactionlog.log.reference_generator.timestamp_format=yyyyMMddHHmmssSSS

# If a timestamp is repeated (eg beccause of clock sync etc) 
#  this is the number of times it is allowed to repeat without logging a warning
#
transactionlog.log.reference_generator.timestamp_repeat_warning_count=10

# New reference generator, using the node id and a node-unique database sequence number
# 

# transactionlog.log.reference_generator.class_name=com.seamless.common.referencegeneration.DatabaseSequenceReferenceGenerator
# Database connection for the sequence generator table
#
transactionlog.log.reference_generator.db_driver=org.mariadb.jdbc.Driver
transactionlog.log.reference_generator.db_url=jdbc:mysql://localhost:3306/transactionlog
transactionlog.log.reference_generator.db_user=refill
transactionlog.log.reference_generator.db_password=refill
transactionlog.log.reference_generator.db_autoCommit=true
transactionlog.log.reference_generator.pool_min_size=1
transactionlog.log.reference_generator.pool_max_size=100
transactionlog.log.reference_generator.pool_timeout=100

# The name of the reference number generated
# (used in error logs to determine which reference generator had a problem)
#
transactionlog.log.reference_generator.reference_name=ERS transaction reference

# The database table in which the sequence is stored (as a single row)
#
transactionlog.log.reference_generator.table_name=txe_transaction_reference_sequence

# The column name for the sequence counter
#
transactionlog.log.reference_generator.sequence_column_name=seqNo

# The number of digits in the sequence number part of the generated reference
#
transactionlog.log.reference_generator.num_sequence_digits=10

# The alphabet used to generate the reference sequence number
# Typically digits, but letters may be used to create a shorter transaction reference 
# 
transactionlog.log.reference_generator.sequence_number_alphabet=0123456789

transactionlog.archive.db_driver=org.mariadb.jdbc.Driver
transactionlog.archive.db_url=jdbc:mysql://MASTERDB:3306/transactionlog
transactionlog.archive.db_user=refill
transactionlog.archive.db_password=refill
transactionlog.archive.pool_min_size=1
transactionlog.archive.pool_max_size=100
transactionlog.archive.pool_simultaneous_build_throttle=40

transactionlog.replication.active=true
transactionlog.replication.interval=1s
transactionlog.replication.batch_size=100

# Connection to the database for keeping track of business counters
businesscounters.db_driver=org.mariadb.jdbc.Driver
businesscounters.db_url=jdbc:mysql://MASTERDB:3306/businesscounters
businesscounters.db_user=refill
businesscounters.db_password=refill
businesscounters.pool_max_size=100
businesscounters.pool_simultaneous_build_throttle=40

# --- License system settings ---
# How often the license manager updates its counters to license service
licensemanager.update_frequency=60000

# Path to license file
licenseservice.license_file=license.pgp
# How often license service checks db integrity
licenseservice.update_frequency=600000
# license service db settings
licenseservice.database.db_driver=org.mariadb.jdbc.Driver
licenseservice.database.db_url=jdbc:mysql://MASTERDB:3306/licensecounters
licenseservice.database.db_user=refill
licenseservice.database.db_password=refill

# Example of license SMS notification settings
#
#licenseservice.notification.default_language=en
#licenseservice.notification.sender=1234
#
# buffer_period denotes the time in minute it should consider to avoid 
# sending multiple sms from different nodes
#licenseservice.notifications.buffer_period=60
#
#licenseservice.notifications.state_notification_recipients=
#
#licenseservice.notifications.threshold_warnings.1.percentage=80
#licenseservice.notifications.threshold_warnings.1.notification_id=LICENSE_AT_80P
#licenseservice.notifications.threshold_warnings.1.notification_recipients=
#
#licenseservice.notifications.threshold_warnings.2.percentage=95
#licenseservice.notifications.threshold_warnings.2.notification_id=LICENSE_AT_95P
#licenseservice.notifications.threshold_warnings.2.notification_recipients=


## Pricing configuration
#
# Set list of pricing engines
# Syntax: pricing.engines.$engine_name$.$property_name$=$property_value$
# There are 4 types of pricing engine.
# 1. BeanshellPriceEngine
#	pricing.engines.A.classname=BeanShellPriceEngine
#	pricing.engines.A.script=pricing/mollet_transfer.bsh
# 2. SimpleTopupPriceEngine
#	pricing.engines.B.classname=SimpleTopupPriceEngine
# 3. FreePriceEngine
#	pricing.engines.C.classname=FreePriceEngine
# 4. ExternalPriceEngine
# 	pricing.engines.D.classname=ExternalPriceEngine
# 	pricing.engines.D.url=http://localhost:8080/core/priceengine
# 	pricing.engines.D.product_SKU=CREDIT_TRANSFER

pricing.engines.MOLLET_TRANSFER.classname=BeanShellPriceEngine
pricing.engines.MOLLET_TRANSFER.script=pricing/mollet_transfer.bsh

pricing.engines.REDEEM_VOUCHER.classname=BeanShellPriceEngine
pricing.engines.REDEEM_VOUCHER.script=pricing/redeem_voucher.bsh

pricing.engines.MOLLET_DEREGISTER_SUBSCRIBER.classname=BeanShellPriceEngine
pricing.engines.MOLLET_DEREGISTER_SUBSCRIBER.script=pricing/mollet_deregister_subscriber.bsh

pricing.engines.MOLLET_DEPOSIT.classname=SimpleTopupPriceEngine
pricing.engines.SIMPLE_TRANSFER.classname=SimpleTransferPriceEngine
pricing.engines.SIMPLE_PURCHASE.classname=SimplePurchasePriceEngine

pricing.engines.EXTERNAL_BUSINESS_LOGIC.classname=ExternalBusinessLogicEngine
pricing.engines.EXTERNAL_BUSINESS_LOGIC.url=http://localhost:8922/businessLogic

pricing.engines.LEGACY_VOUCHER.classname=ExternalPriceEngine
pricing.engines.LEGACY_VOUCHER.url=http://localhost:8912/coreProxy
pricing.engines.LEGACY_VOUCHER.product_SKU=NA

pricing.engines.VAS.classname=BeanShellPriceEngine
pricing.engines.VAS.script=pricing/vas.bsh

pricing.engines.FREE.classname=FreePriceEngine

pricing.engines.SIMPLE_TOPUP.classname=SimpleTopupPriceEngine

pricing.engines.SUPPORT_TRANSFER.classname=BeanShellPriceEngine
pricing.engines.SUPPORT_TRANSFER.script=pricing/support_transfer.bsh

pricing.engines.FAF.classname=BeanShellPriceEngine
pricing.engines.FAF.script=pricing/faf.bsh

# Pricing mapping configuration.
# Mapping transaction profile with pricing engine.
# Every transaction need pricing engine.
# Syntax:
# 	pricing.mappings.$ordering_number$.$property_name$=$property_value$
# Examples:
# Set classifier 
#	pricing.mappings.1.classifier_match=.*/MOLLET_TRANSFER
# Set engine
#	pricing.mappings.1.engine=MOLLET_TRANSFER

pricing.mappings.1.classifier_match=.*/Subscriber/MOLLET_TRANSFER.*
pricing.mappings.1.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.2.classifier_match=.*/.*BALANCE.*
pricing.mappings.2.engine=FREE

pricing.mappings.3.classifier_match=.*/MOLLET_ACTIVATE.*
pricing.mappings.3.engine=FREE

pricing.mappings.4.classifier_match=.*/.*CHANGE_PASSWORD.*
pricing.mappings.4.engine=FREE

pricing.mappings.5.classifier_match=.*/MOLLET_DEPOSIT.*
pricing.mappings.5.engine=MOLLET_TRANSFER

pricing.mappings.6.classifier_match=.*/MOLLET_REGISTER.*
pricing.mappings.6.engine=FREE

pricing.mappings.7.classifier_match=.*/LAST_TRANSACTION.*
pricing.mappings.7.engine=FREE

pricing.mappings.8.classifier_match=.*/MOLLET_DEREGISTER.*
pricing.mappings.8.engine=MOLLET_DEREGISTER_SUBSCRIBER

pricing.mappings.9.classifier_match=.*/MOLLET_WITHDRAWAL.*
pricing.mappings.9.engine=MOLLET_TRANSFER

pricing.mappings.10.classifier_match=.*/Reseller/TOPUP.*
pricing.mappings.10.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.11.classifier_match=.*/(Reseller|Subscriber)/CREDIT_TRANSFER.*
pricing.mappings.11.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.12.classifier_match=.*/Subscriber/AIRTIME_TOPUP.*
pricing.mappings.12.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.13.classifier_match=.*/TRANSACTION_STATUS.*
pricing.mappings.13.engine=FREE

pricing.mappings.14.classifier_match=.*/MOLLET_VOUCHER_CREATE.*
pricing.mappings.14.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.15.classifier_match=.*/MOLLET_VOUCHER_REDEEM.*
pricing.mappings.15.engine=REDEEM_VOUCHER

pricing.mappings.16.classifier_match=.*/RESELLER_INFO.*
pricing.mappings.16.engine=FREE

pricing.mappings.17.classifier_match=.*/SUB_RESELLER_SEARCH.*
pricing.mappings.17.engine=FREE

pricing.mappings.18.classifier_match=.*/SUB_RESELLER_TYPES.*
pricing.mappings.18.engine=FREE

pricing.mappings.19.classifier_match=.*/REGISTER_SUB_RESELLER.*
pricing.mappings.19.engine=FREE

pricing.mappings.20.classifier_match=.*/REPORT.*
pricing.mappings.20.engine=FREE

pricing.mappings.21.classifier_match=.*/REGISTER_ETOPUP_SERVICE.*
pricing.mappings.21.engine=FREE

pricing.mappings.22.classifier_match=.*/*_ANONYMOUSID.*
pricing.mappings.22.engine=FREE

pricing.mappings.23.classifier_match=.*/AIRTIME_TRANSFER.*
pricing.mappings.23.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.24.classifier_match=.*/VAS.*
pricing.mappings.24.engine=VAS

pricing.mappings.25.classifier_match=.*/BLOCK_RESELLER.*
pricing.mappings.25.engine=FREE

pricing.mappings.26.classifier_match=.*/UNBLOCK_RESELLER.*
pricing.mappings.26.engine=FREE

pricing.mappings.27.classifier_match=.*/VALIDATE_TOPUP.*
pricing.mappings.27.engine=FREE

pricing.mappings.28.classifier_match=.*/TRANSACTIONS_SEARCH.*
pricing.mappings.28.engine=FREE

pricing.mappings.29.classifier_match=.*/RESET_BUSINESS_COUNTER.*
pricing.mappings.29.engine=FREE

pricing.mappings.30.classifier_match=.*/REVERSE_TRANSFER.*
pricing.mappings.30.engine=FREE

pricing.mappings.31.classifier_match=.*/GET_USER_INFO.*
pricing.mappings.31.engine=FREE

pricing.mappings.32.classifier_match=.*/RESELLER_ACTIVATE.*
pricing.mappings.32.engine=FREE

pricing.mappings.33.classifier_match=.*/GET_SUBSCRIBER_INFO.*
pricing.mappings.33.engine=FREE

pricing.mappings.34.classifier_match=.*/RESELLER_WITHDRAW.*
pricing.mappings.34.engine=SIMPLE_TRANSFER

pricing.mappings.35.classifier_match=.*/RESELLER_DEPOSIT.*
pricing.mappings.35.engine=SIMPLE_TRANSFER

pricing.mappings.36.classifier_match=.*/REGISTER_WEB_USER.*
pricing.mappings.36.engine=FREE

pricing.mappings.37.classifier_match=.*/Subscriber/ACTIVATE_SERVICE.*
pricing.mappings.37.engine=FREE

pricing.mappings.38.classifier_match=.*/Subscriber/MOLLET_TOPUP.*
pricing.mappings.38.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.39.classifier_match=.*/REVERSE_CREDIT_TRANSFER.*
pricing.mappings.39.engine=FREE

pricing.mappings.40.classifier_match=.*/REVERSE_TOPUP.*
pricing.mappings.40.engine=FREE

pricing.mappings.41.classifier_match=.*/Reseller/MOLLET_TRANSFER.*
pricing.mappings.41.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.42.classifier_match=.*/REVERSE_MOLLET_VOUCHER_CREATE.*
pricing.mappings.42.engine=FREE

pricing.mappings.43.classifier_match=.*/REVERSE_MOLLET_TRANSFER.*
pricing.mappings.43.engine=FREE

pricing.mappings.44.classifier_match=.*/RESERVE_VOUCHERS.*
pricing.mappings.44.engine=LEGACY_VOUCHER

pricing.mappings.45.classifier_match=.*/PURCHASE.*
pricing.mappings.45.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.46.classifier_match=.*/CANCEL_VOUCHER_RESERVATION.*
pricing.mappings.46.engine=FREE

pricing.mappings.47.classifier_match=.*/MOLLET_QUERY_VOUCHER.*
pricing.mappings.47.engine=FREE

pricing.mappings.48.classifier_match=.*/REPORT_SOLD_VOUCHERS.*
pricing.mappings.48.engine=FREE

pricing.mappings.49.classifier_match=.*/RESELLER_LINK_SUB_RESELLER.*
pricing.mappings.49.engine=FREE

pricing.mappings.50.classifier_match=.*/RESELLER_DELINK_SUB_RESELLER.*
pricing.mappings.50.engine=FREE

pricing.mappings.51.classifier_match=.*/SYSTEM_INFO.*
pricing.mappings.51.engine=FREE

pricing.mappings.52.classifier_match=.*/SYSTEM_OPERATION.*
pricing.mappings.52.engine=FREE

pricing.mappings.53.classifier_match=ERSGetPrincipalInformationTransaction/.*
pricing.mappings.53.engine=FREE

pricing.mappings.54.classifier_match=.*/Subscriber/TOPUP.*
pricing.mappings.54.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.55.classifier_match=.*/Subscriber/CUSTOM_OPERATION_FAF_.*
pricing.mappings.55.engine=FAF

pricing.mappings.56.classifier_match=.*/AdminUser/CREDIT_TRANSFER.*
pricing.mappings.56.engine=SUPPORT_TRANSFER

pricing.mappings.57.classifier_match=.*/(Reseller|Subscriber|AdminUser)/CUSTOM_OPERATION_.*
pricing.mappings.57.engine=FREE

pricing.mappings.58.classifier_match=.*/Subscriber/CUSTOM_OPERATION_SUBSCRIBER_ANONYMOUS_ID_GENERATE.*
pricing.mappings.58.engine=FREE
#pricing.mappings.58.engine=SUBSCRIBER_ANONYMOUSID_GENERATE


pricing.mappings.59.classifier_match=.*/Subscriber/CUSTOM_OPERATION_SUBSCRIBER_ANONYMOUS_ID_CHANGE.*
pricing.mappings.59.engine=FREE
#pricing.mappings.59.engine=SUBSCRIBER_ANONYMOUSID_CHANGE

# Examples of product to provider mappings
#
#topup.productprovidermapping.1.product_sku=17
#topup.productprovidermapping.1.provider_id=SOMETELCO
#
#topup.productprovidermapping.2.product_sku=18
#topup.productprovidermapping.2.provider_id=TELCO2
#
#topup.productprovidermapping.3.product_sku=19
#topup.productprovidermapping.3.provider_id=SOMEOTHERTELCO

# Example of callback event
eventcallback.1.callback_type=CANCEL_TRANSACTION_CALLBACK
#This classname will call specific method in TXETransactionProcessingService
eventcallback.1.classname=CancelTransactionCallback
eventcallback.1.data.principal_id_type=ADMINUSER
eventcallback.1.data.principal_id=eventscheduler
eventcallback.1.data.principal_password=seamless

# Connection to event scheduler
# In order to enable it, you need to uncomment the url setting
# but you need to make sure that you have ers-eventscheduler install
#eventscheduler.connection.url=http://localhost:8337/eventscheduler
eventscheduler.connection.user=username
eventscheduler.connection.password=password

# Example of event scheduler jobs
# Type of transaction which requires some callback operation
eventscheduler.1.classifier_match=.*
# Event-Scheduler job id which needs to called
eventscheduler.1.job_id=PENDING_TIMEOUT_EVENT
# Event type specifies which callback type will be called once the job is fired 
eventscheduler.1.event_type=CANCEL_TRANSACTION_CALLBACK

